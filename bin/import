#!/usr/bin/bash

set -e
trap 'catchExit $?' EXIT

INPUT_DIR=$1
RESULTS_DIR=$2

WORKING_DIR=$PWD

rm -f $INPUT_DIR/vdi-meta.json
cp $INPUT_DIR/* $WORKING_DIR/

function log() {
  echo "$@" >&2
}

function cleanup() {
  log "Dropping Database ${DB_NAME}"
  psql -U postgres -c "DROP DATABASE IF EXISTS \"${DB_NAME}\" WITH (FORCE);" > /dev/null
}

function catchExit() {
  local -r originalExitCode="$1"

  cleanup
  if process-nf-result; then
    exit $originalExitCode
  else
    exit $?
  fi
}

function confReplace() {
  sed -i "s#$1.*#$2#" $GUS_CONFIG
}

DB_NAME="$VDI_IMPORT_ID"
GUS_CONFIG=$WORKING_DIR/gus.config
GEO_MAPPINGS=/usr/local/lib/xml/geoMappings.xml

log "WORKING Directory = ${WORKING_DIR}"

validateUserFiles $INPUT_DIR

cp $GUS_HOME/config/gus.config $GUS_CONFIG
confReplace "${TEMPLATE_DB_NAME}" "$DB_NAME"

log "MAKING database ${DB_NAME}"
createdb -T $TEMPLATE_DB_NAME -U postgres $DB_NAME

log "Write Config ..."
writeNextflowConfig --workdir ${WORKING_DIR} \
  --gusConfigFile $GUS_CONFIG \
  --name $DB_NAME \
  --geoMappings $GEO_MAPPINGS \
  --resultsDir ${RESULTS_DIR} \
  >${WORKING_DIR}/nextflow.config

log "Begin Loading ..."
nextflow -C ${WORKING_DIR}/nextflow.config \
  run $PROJECT_HOME/eda-nextflow/main.nf \
  -ansi-log false \
  -entry loadUserDataset \
  1>&2
